<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ExIcalendarNoEventFound" xml:space="preserve">
    <value>The supplied calendar information does not contain a valid event / appointment.</value>
  </data>
  <data name="ExBtNoDeviceAddress" xml:space="preserve">
    <value>Bluetooth Device address must be defined.</value>
  </data>
  <data name="ExMessageUnexpectedEnd" xml:space="preserve">
    <value>Ndef parse error: Unexpected end of message.</value>
  </data>
  <data name="ExLaunchAppWpId" xml:space="preserve">
    <value>For a Windows Phone platform ID, please supply the 36 character product ID containing only hexadecimal characters and '-'.</value>
  </data>
  <data name="ExIcalendarNoCalendarFound" xml:space="preserve">
    <value>No calendar data found in the supplied calendar data.</value>
  </data>
  <data name="ExGeoNoHereMapsAppId" xml:space="preserve">
    <value>HERE Maps URI schemes require an AppId.</value>
  </data>
  <data name="ExHandoverDataReferenceTooLong" xml:space="preserve">
    <value>Data Reference is too long - use the record ID in max 255 characters.</value>
  </data>
  <data name="ExMessageInvalidChunkedType" xml:space="preserve">
    <value>Ndef parse error: Invalid chunked data, Type Length != 0.</value>
  </data>
  <data name="ExHandoverErrorInvalidSourceData" xml:space="preserve">
    <value>Can not create Handover Error record based on the provided source data.</value>
  </data>
  <data name="ExBtInvalidLength" xml:space="preserve">
    <value>Encoded Bluetooth OOB data length does not match payload length.</value>
  </data>
  <data name="ExSocialNoUser" xml:space="preserve">
    <value>Social user name must not be empty.</value>
  </data>
  <data name="ExHandoverErrorInvalidData" xml:space="preserve">
    <value>Invalid error data.</value>
  </data>
  <data name="ExInvalidCopy" xml:space="preserve">
    <value>Attempted to instantiate new record from incompatible record.</value>
  </data>
  <data name="ExBtNoValidServiceClassLength" xml:space="preserve">
    <value>Bluetooth Service Class Length invalid.</value>
  </data>
  <data name="ExRecordUnchangedId" xml:space="preserve">
    <value>Id must not be set for middle or terminating record (TNF = Unchanged).</value>
  </data>
  <data name="ExMessageBeginLate" xml:space="preserve">
    <value>Ndef parse error: Message Begin flag present after first record.</value>
  </data>
  <data name="ExBtInvalidMinimumLength" xml:space="preserve">
    <value>OOB data does not reach minumum length of 8 bytes.</value>
  </data>
  <data name="ExNearSpeakNoValidType" xml:space="preserve">
    <value>No valid NearSpeak type identifier.</value>
  </data>
  <data name="ExMailtoAddressEmpty" xml:space="preserve">
    <value>Recipient address must not be empty.</value>
  </data>
  <data name="ExLaunchAppPlatformLength" xml:space="preserve">
    <value>Unable to assemble LaunchApp payload: length of platform / AppID tuple more than 255 characters.</value>
  </data>
  <data name="ExNearSpeakLanguageWrongLength" xml:space="preserve">
    <value>Language code must be 5 characters.</value>
  </data>
  <data name="ExSmsNumberEmpty" xml:space="preserve">
    <value>Number for SMS record must not be empty.</value>
  </data>
  <data name="ExHandoverDataTooManyAuxiliaryReferences" xml:space="preserve">
    <value>Too many auxiliary data references - use max 255 data references.</value>
  </data>
  <data name="ExRecordNoType" xml:space="preserve">
    <value>No Type set for record.</value>
  </data>
  <data name="ExMessageBeginMissing" xml:space="preserve">
    <value>Ndef parse error: Expected Message Begin missing in first record.</value>
  </data>
  <data name="ExBtNoValidHexAddress" xml:space="preserve">
    <value>No valid Bluetooth address in hexadecimal format.</value>
  </data>
  <data name="ExBtInvalidLengthSimplePairingRandomizerR" xml:space="preserve">
    <value>Invalid length of the simple pairing randomizer R (should be 16 octets).</value>
  </data>
  <data name="ExHandoverInvalidVersion" xml:space="preserve">
    <value>Handover version must be one byte, containing major and minor fields.</value>
  </data>
  <data name="ExLaunchAppPlatformMissing" xml:space="preserve">
    <value>Unable to assemble LaunchApp payload: at least one platform / AppID tuple is required.</value>
  </data>
  <data name="ExNokiaAccessoriesSerialEmpty" xml:space="preserve">
    <value>Serial number for Nokia Accessories must not be empty.</value>
  </data>
  <data name="ExRawUriNoAbbreviation" xml:space="preserve">
    <value>The raw URI can only be retrieved if the URI is not abbreviated by the record.</value>
  </data>
  <data name="ExNearSpeakNoCloudId" xml:space="preserve">
    <value>Online ID must be set.</value>
  </data>
  <data name="ExHandoverErrorNoReason" xml:space="preserve">
    <value>No error reason present.</value>
  </data>
  <data name="ExBtNoValidServiceClassId" xml:space="preserve">
    <value>No valid Bluetooth Service Class ID.</value>
  </data>
  <data name="ExHandoverNoCarrierDataReference" xml:space="preserve">
    <value>The Alternative Carrier record needs to define a carrier data reference.</value>
  </data>
  <data name="ExSmsBodyEmpty" xml:space="preserve">
    <value>Body text for SMS record must not be empty.</value>
  </data>
  <data name="ExMessagePartialChunk" xml:space="preserve">
    <value>Ndef parse error: Partial chunk not empty or typeNameFormat not 0x06 as expected.</value>
  </data>
  <data name="ExBtInvalidLengthSimplePairingHashC" xml:space="preserve">
    <value>Invalid length of the simple pairing hash C (should be 16 octets).</value>
  </data>
  <data name="ExRecordUnchangedTypeName" xml:space="preserve">
    <value>Record with TNF Unchanged must have an empty type name.</value>
  </data>
  <data name="ExNokiaAccessoriesProductEmpty" xml:space="preserve">
    <value>ProductName for Nokia Accessories record must not be empty.</value>
  </data>
  <data name="ExLaunchAppArgumentsEmpty" xml:space="preserve">
    <value>Arguments for LaunchApp must not be empty.</value>
  </data>
  <data name="ExBtCodUnknownFormat" xml:space="preserve">
    <value>Unknown format for class of device information.</value>
  </data>
  <data name="ExMessageEndLate" xml:space="preserve">
    <value>Ndef parse error: Message End flag present after last record.</value>
  </data>
  <data name="ExNearSpeakNoText" xml:space="preserve">
    <value>Text to speak must not be empty.</value>
  </data>
  <data name="ExNokiaAccessoriesSerialFormat" xml:space="preserve">
    <value>Serial number must be 19 chars, decimal numbers only.</value>
  </data>
  <data name="ExSpUriEmpty" xml:space="preserve">
    <value>Uri of Smart Poster ust not be empty.</value>
  </data>
  <data name="ExHandoverErrorUnknownReason" xml:space="preserve">
    <value>Unknown error reason.</value>
  </data>
  <data name="ExHandoverAcCarrierNoData" xml:space="preserve">
    <value>No Carrier Data Reference present in Handover Select / Alternative Carrier record.</value>
  </data>
  <data name="ExRecordEmptyWithTypeOrPayload" xml:space="preserve">
    <value>The Empty record must not have a payload or a type.</value>
  </data>
  <data name="ExMailtoAddressNotValid" xml:space="preserve">
    <value>The recipient address does not appear to be valid.</value>
  </data>
  <data name="ExHandoverErrorNoData" xml:space="preserve">
    <value>No error data present.</value>
  </data>
  <data name="ExHandoverSelectMsgInvalidRecords" xml:space="preserve">
    <value>Can not create Handover Select message - found illegal record.</value>
  </data>
  <data name="ExNearSpeakNoLanguage" xml:space="preserve">
    <value>Language code must be defined.</value>
  </data>
  <data name="ExMessageNoBeginOrEnd" xml:space="preserve">
    <value>Ndef parse error: Malformed NDEF Message, missing begin or end.</value>
  </data>
  <data name="ExMessageInvalidChunkedId" xml:space="preserve">
    <value>Ndef parse error: Invalid chunked data, Id Length != 0.</value>
  </data>
  <data name="ExLaunchAppPlatformsEmpty" xml:space="preserve">
    <value>At least one platform / app ID tuple needs to be defined.</value>
  </data>
  <data name="ExTelNumberEmpty" xml:space="preserve">
    <value>Number for telephone record must not be empty.</value>
  </data>
</root>